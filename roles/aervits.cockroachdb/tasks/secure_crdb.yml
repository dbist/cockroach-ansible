---
# secure cockroachdb tasks file for aervits.cockroachdb

- name: create certs dirs
  file:
    path: "{{ certs_dir }}/certs"
    state: directory
    owner: vagrant
    group: vagrant
    mode: '0700'

- name: create the CA directory
  file:
    path: "{{ certs_dir }}/my-safe-directory"
    state: directory
    owner: vagrant
    group: vagrant
    mode: '0700'

- name: create the CA cert and key pair
  command: cockroach cert create-ca --certs-dir=certs --ca-key=my-safe-directory/ca.key
  become: yes
  become_user: vagrant
  args:
    creates: "{{ certs_dir }}/my-safe-directory/ca.key"

# this perhaps needs to be done per node on each node, using a single CA
- name: create a node certificate and key pair
  command: cockroach cert create-node localhost "{{ ansible_hostname }}" \
    --certs-dir=certs --ca-key=my-safe-directory/ca.key
  become: yes
  become_user: vagrant
#  become_user: "{{ cockroach_user }}"
  args:
    creates: "{{ certs_dir }}/certs/node.crt"

# this will need to be done on a single node, perhaps a client
- name: create a client cert
  command: cockroach cert create-client root --certs-dir=certs \
    --ca-key=my-safe-directory/ca.key
  become: yes
  become_user: vagrant
  args:
    creates: "{{ certs_dir }}/certs/client.root.crt"

# there must be a better way to handle `--join`, get it from the facts?
- name: start a node "{{ ansible_hostname }}"
  command: cockroach start --certs-dir=certs --store="{{ store_dir }}" --listen-addr="{{ ansible_fqdn }}":26257 \
    --http-addr="{{ ansible_fqdn }}":8080 \
    --join="{{ join_members[0] }}","{{ join_members[1] }}","{{ join_members[2] }}" --background
  become: yes
# cockroach user is unprivileged, Ansible complains, fix to run as cockroach
  become_user: vagrant
#  become_user: "{{ cockroach_user }}"

#- name: get inventory hostnames
#  debug:
#    msg: "{{ item }}"
#  with_inventory_hostnames:
#    - all:roach[1:3].example.com
